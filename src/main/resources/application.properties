spring.application.name=ecommerce-api

# Puerto del servidor (por defecto es 8080)
server.port=8080

# --- CONFIGURACIÓN DE BASE DE DATOS ---

# URL de conexión a la base de datos MySQL (cambia el nombre de la base al final)
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce-api-db?useSSL=false&serverTimezone=America/Argentina/Buenos_Aires

# Usuario de la base de datos
spring.datasource.username=root

# Contraseña del usuario de la base de datos
spring.datasource.password=

# Driver JDBC para MySQL (necesario si usás MySQL 8 o superior)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- CONFIGURACIÓN DE JPA / HIBERNATE ---

# Estrategia para manejar el esquema de la base de datos:
# update: crea o actualiza las tablas según las entidades (útil en desarrollo)
# validate: verifica que las tablas coincidan con las entidades (no las crea)
# none: no hace nada (útil en producción)
spring.jpa.hibernate.ddl-auto=update

# Muestra las consultas SQL por consola
spring.jpa.show-sql=true

# Formatea las consultas SQL para que se vean más legibles
spring.jpa.properties.hibernate.format_sql=true

# Dialecto SQL específico para MySQL 8 (asegura compatibilidad con las funciones de MySQL)
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# --- OTRAS CONFIGURACIONES ---

# Configura la zona horaria para serializar fechas (Jackson)
spring.jackson.time-zone=America/Argentina/Buenos_Aires

# Permite que Spring sobrescriba definiciones de beans si hay duplicados (útil si usás validaciones o config duplicada)
spring.main.allow-bean-definition-overriding=true
